#!/bin/bash

##################################################
# FUNCTIONS
##################################################

##
show_help () {
echo "Usage:"
echo "$(basename $0) {dns-masters|dns-workers|dns-etcd|install-info|haproxy|services}"
echo ""
}
##
dns-masters () {
echo "======================"
echo "DNS Config for Masters"
echo "======================"
echo ""
egrep --color=none -A 4 '^; Create entries for the master hosts' /var/named/zonefile.db
echo ""
echo "======================"
echo "DNS Lookup for Masters"
echo "======================"
{% for m in masters %}
echo ""
echo "{{ m.name }}.{{ dns.clusterid }}.{{ dns.domain }}"
echo "-------------------------------------------------"
echo "IP: $(dig @{{ util.ipaddr }} {{ m.name }}.{{ dns.clusterid }}.{{ dns.domain }} +short)"
echo "Reverse: $(dig @localhost -x $(dig @localhost {{ m.name }}.{{ dns.clusterid }}.{{ dns.domain }} +short) +short)"
{% endfor %}
}
###
dns-workers () {
echo "======================"
echo "DNS Config for Workers"
echo "======================"
echo ""
egrep --color=none -A 4 '^; Create entries for the worker' /var/named/zonefile.db
echo ""
echo "======================"
echo "DNS Lookup for Workers"
echo "======================"
{% for w in workers %}
echo ""
echo "{{ w.name }}.{{ dns.clusterid }}.{{ dns.domain }}"
echo "-------------------------------------------------"
echo "IP: $(dig @{{ util.ipaddr }} {{ w.name }}.{{ dns.clusterid }}.{{ dns.domain }} +short)"
echo "Reverse: $(dig @localhost -x $(dig @localhost {{ w.name }}.{{ dns.clusterid }}.{{ dns.domain }} +short) +short)"
{% endfor %}
}
###
dns-etcd () {
echo "==================="
echo "DNS Config for ETCD"
echo "==================="
echo ""
egrep --color=none -A 4 '^; The ETCd cluster lives' /var/named/zonefile.db
echo ""
echo "==================="
echo "DNS lookup for ETCD"
echo "==================="
for i in etcd-{0..2}
do
  dig @localhost ${i}.{{ dns.clusterid }}.{{ dns.domain }} +short
done
echo ""
echo "==================="
echo "SRV config for ETCD"
echo "==================="
echo ""
egrep --color=none -A 4 '^; The SRV' /var/named/zonefile.db
echo ""
echo "==================="
echo "SRV lookup for ETCD"
echo "==================="
dig @{{ util.ipaddr }} _etcd-server-ssl._tcp.{{ dns.clusterid }}.{{ dns.domain }} SRV +short
echo ""
}
###
install-info () {
cat <<EOF

This server should also be used as the install node. Apache is running on http://{{ util.ipaddr }}:8080 You can put your openshift-install artifacts (bios images and ignition files) in /var/www/html

Quickstart Notes:
	mkdir ~/install
	cd ~/install
	vi install-config.yaml
	openshift-install create ignition-configs
	cp *.ign /var/www/html/ignition/
	restorecon -vR /var/www/html/

(See https://docs.openshift.com/container-platform/4.1/installing/installing_bare_metal/installing-bare-metal.html for more details)

EOF
}
###
haproxy () {
cat <<EOF

HAProxy stats are on http://{{ util.ipaddr }}:9000 and you should use it to monitor the install when you start.

EOF
}
###
services () {
echo "Status of services:"
echo "==================="
for i in dhcpd named haproxy httpd tftp; do echo -e "Status of $i svc \t\t-> $(systemctl status --no-pager $i | grep --color Active)"; done
}
##

##################################################
# MAIN SCRIPT 
##################################################

case "$1" in
  dns-masters)
    dns-masters
    ;;
  dns-workers)
    dns-workers
    ;;
  dns-etcd)
    dns-etcd
    ;;
  install-info)
    install-info
    ;;
  haproxy)
    haproxy
    ;;
  services)
    services
    ;;
  *)
    show_help
    exit 1
    ;;
esac
#
exit 0
###
